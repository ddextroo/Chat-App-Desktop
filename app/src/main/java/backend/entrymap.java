/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package backend;

/**
 * A class representing a MapEntry for a HashMap.
 * DO NOT EDIT THIS FILE!
 *
 * @version 1.0
 * @author CS 1332 TAs
 */
public class entrymap<K, V> {
    private K key;
    private V value;
    private entrymap<K, V> next;

    /**
     * Create a MapEntry object with the given key and value.
     *
     * @param key key for this entry
     * @param value value for this entry
     */
    public entrymap(K key, V value) {
        this(key, value, null);
    }

    /**
     * Create a MapEntry object with the given key, value and next reference.
     *
     * @param key key for this entry
     * @param value value for this entry
     * @param next next entry in the external chain
     */
    public entrymap(K key, V value, entrymap<K, V> next) {
        this.key = key;
        this.value = value;
        this.next = next;
    }

    /**
     * Gets the key held by this entry.
     *
     * @return key in this entry.
     */
    public K getKey() {
        return key;
    }

    /**
     * Sets the key held by this entry.
     *
     * @param key key to store in this entry.
     */
    public void setKey(K key) {
        this.key = key;
    }

    /**
     * Gets the value held by this entry.
     *
     * @return value in this entry
     */
    public V getValue() {
        return value;
    }

    /**
     * Sets the value held by this entry.
     *
     * @param value value to store in this entry
     */
    public void setValue(V value) {
        this.value = value;
    }

    /**
     * Gets the next entry in the external chain.
     *
     * @return the next entry
     */
    public entrymap<K, V> getNext() {
        return next;
    }

    /**
     * Sets the next reference in this external chain.
     *
     * @param next the new next entry
     */
    public void setNext(entrymap<K, V> next) {
        this.next = next;
    }

    @Override
    public boolean equals(Object o) {
        // DO NOT USE THIS METHOD IN YOUR CODE! This is for testing ONLY!
        if (!(o instanceof entrymap)) {
            return false;
        } else {
            entrymap<K, V> that = (entrymap<K, V>) o;
            return that.getKey().equals(key) && that.getValue().equals(value);
        }
    }

    @Override
    public String toString() {
        return String.format("%s: %s", key.toString(), value.toString());
    }
}
